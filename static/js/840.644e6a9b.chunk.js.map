{"version":3,"file":"static/js/840.644e6a9b.chunk.js","mappings":"qOAEaA,EAAkBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8U,UCC5BC,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2EAMzBG,GAAcL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAaO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,oHAS3BM,EAAYR,EAAAA,GAAAA,OAAaS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,uM,wCCZzBQ,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAEvBC,GAAWC,EAAAA,EAAAA,MAsBjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,cANY,CACpBC,KAAM,GACNC,OAAQ,IAI8BC,SArBnB,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UACxBC,EAAa,CACjBN,KAAMG,EAAOH,KACbC,OAAQE,EAAOF,QAGbT,EAASe,MAAK,SAAAC,GAAO,OAAIA,EAAQR,OAASM,EAAWN,IAAI,IAC3DS,MAAM,GAADC,OAAIJ,EAAWN,KAAI,4BAExBL,GAASgB,EAAAA,EAAAA,IAAWL,IAGtBD,GACF,EAQ+DO,UAC3DC,EAAAA,EAAAA,MAAC7B,EAAU,CAAA4B,SAAA,EACTC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACEf,EAAAA,EAAAA,KAAA,SAAOkB,QAAQ,OAAMH,SAAC,WACtBf,EAAAA,EAAAA,KAACX,EAAW,CACV8B,KAAK,OACLC,GAAG,OACHjB,KAAK,OACLkB,aAAa,OACbC,UAAQ,QAGZN,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACEf,EAAAA,EAAAA,KAAA,SAAOkB,QAAQ,SAAQH,SAAC,aACxBf,EAAAA,EAAAA,KAACX,EAAW,CAAC8B,KAAK,MAAMC,GAAG,SAASjB,KAAK,SAASmB,UAAQ,QAE5DtB,EAAAA,EAAAA,KAACR,EAAS,CAAC2B,KAAK,SAAQJ,SAAC,oBAIjC,EClDaQ,EAAavC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uIAStBsC,EAAaxC,EAAAA,GAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,oWA2BtBM,EAAYR,EAAAA,GAAAA,OAAaS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,gLC3BzBuC,EAAc,WACzB,IAAM3B,GAAWC,EAAAA,EAAAA,MAEXJ,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvB6B,GAAY9B,EAAAA,EAAAA,IAAY+B,EAAAA,IACxBC,GAAQhC,EAAAA,EAAAA,IAAYiC,EAAAA,IACpBC,GAASlC,EAAAA,EAAAA,IAAYmC,EAAAA,KAE3BC,EAAAA,EAAAA,YAAU,WACRlC,GAASmC,EAAAA,EAAAA,MACX,GAAG,CAACnC,IAEJ,IAAMoC,EAAmBvC,EAASmC,QAAO,SAAAnB,GAAO,OAC9CA,EAAQR,KAAKgC,cAAcC,SAASN,EAAOK,cAAc,IAG3D,OACEnB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,CACGW,IAAa1B,EAAAA,EAAAA,KAAA,OAAAe,SAAK,eAClBa,IAASZ,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,KAAGa,EAAM,QACxB5B,EAAAA,EAAAA,KAACuB,EAAU,CAAAR,SACRmB,EAAiBG,KAAI,SAAA9B,GAA2B,IAAxBa,EAAEb,EAAFa,GAAIjB,EAAII,EAAJJ,KAAMC,EAAMG,EAANH,OACjC,OACEY,EAAAA,EAAAA,MAACQ,EAAU,CAAAT,SAAA,EACTf,EAAAA,EAAAA,KAAA,QAAMsC,UAAU,OAAMvB,SAAEZ,KACxBH,EAAAA,EAAAA,KAAA,QAAMsC,UAAU,SAAQvB,SAAEX,KAC1BJ,EAAAA,EAAAA,KAACR,EAAS,CACR2B,KAAK,SACLoB,QAAS,WACPzC,GAAS0C,EAAAA,EAAAA,IAAcpB,GACzB,EAAEL,SACH,aARcK,EAarB,QAIR,ECjDaqB,EAAczD,EAAAA,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+PCG1BwD,EAAS,WACpB,IAAMZ,GAASlC,EAAAA,EAAAA,IAAYmC,EAAAA,IACrBjC,GAAWC,EAAAA,EAAAA,MAEjB,OACEiB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEf,EAAAA,EAAAA,KAACyC,EAAW,CAACvB,QAAQ,SAAQH,SAAC,2BAC9Bf,EAAAA,EAAAA,KAAA,SACEG,KAAK,SACLgB,KAAK,OACLC,GAAG,SACHuB,MAAOb,EACPc,SAAU,SAAAC,GAAC,OAAI/C,GAASgD,EAAAA,EAAAA,IAAcD,EAAEE,cAAcJ,OAAO,MAIrE,ECDA,EAbqB,WACnB,OACE3B,EAAAA,EAAAA,MAACjC,EAAe,CAAAgC,SAAA,EACdf,EAAAA,EAAAA,KAAA,MAAAe,SAAI,eACJf,EAAAA,EAAAA,KAACN,EAAW,KAEZM,EAAAA,EAAAA,KAAA,MAAAe,SAAI,cACJf,EAAAA,EAAAA,KAAC0C,EAAM,KACP1C,EAAAA,EAAAA,KAACyB,EAAW,MAGlB,C","sources":["components/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  margin: 40px auto;\n  padding: 20px;\n  max-width: 650px;\n  text-align: center;\n  border-radius: 10px;\n\n  h1 {\n    margin-bottom: 20px;\n    padding: 5px;\n    font-size: 44px;\n    border-radius: 10px;\n  }\n\n  h2 {\n    margin-bottom: 20px;\n    padding: 5px;\n    font-size: 32px;\n    border-radius: 10px;\n  }\n`;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  margin-bottom: 10px;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nexport const StyledField = styled(Field)`\n  padding: 5px 10px;\n  width: 100%;\n\n  text-align: center;\n  font-size: 24px;\n  border-radius: 5px;\n`;\n\nexport const StyledBtn = styled.button`\n  margin-top: 12px;\n\n  padding: 5px 15px;\n  flex-basis: 15%;\n\n  font-size: 18px;\n  font-weight: 500;\n\n  background-color: transparent;\n  border-radius: 5px;\n\n  cursor: pointer;\n`;\n","import { Formik } from 'formik';\nimport { StyledBtn, StyledForm, StyledField } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/contactsSlice';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const newContact = {\n      name: values.name,\n      number: values.number,\n    };\n\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts`);\n    } else {\n      dispatch(addContact(newContact));\n    }\n\n    resetForm();\n  };\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      <StyledForm>\n        <>\n          <label htmlFor=\"name\">Name:</label>\n          <StyledField\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            autoComplete=\"name\"\n            required\n          />\n        </>\n        <>\n          <label htmlFor=\"number\">Number:</label>\n          <StyledField type=\"tel\" id=\"number\" name=\"number\" required />\n        </>\n        <StyledBtn type=\"submit\">Add contact</StyledBtn>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  margin: 0 auto;\n  max-width: 90%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 15px;\n`;\n\nexport const StyledItem = styled.li`\n  padding: 10px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 30px;\n\n  border-radius: 5px;\n\n  .name {\n    text-align: left;\n    font-size: 22px;\n\n    flex-basis: 33.333%;\n  }\n\n  .number {\n    text-align: right;\n\n    font-weight: 500;\n    font-size: 22px;\n\n    flex-basis: 33.333%;\n  }\n`;\n\nexport const StyledBtn = styled.button`\n  padding: 5px 15px;\n  flex-basis: 15%;\n\n  font-size: 18px;\n  font-weight: 500;\n\n  background-color: transparent;\n  border-radius: 5px;\n\n  cursor: pointer;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { StyledList, StyledItem, StyledBtn } from './ContactList.styled';\nimport {\n  selectContacts,\n  selectContactsError,\n  selectContactsFilterTerm,\n  selectContactsIsLoading,\n} from 'redux/selectors';\nimport { deleteContact, fetchContacts } from 'redux/contactsSlice';\nimport { useEffect } from 'react';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const erorr = useSelector(selectContactsError);\n  const filter = useSelector(selectContactsFilterTerm);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n      {isLoading && <div>Loaging...</div>}\n      {erorr && <div>`${erorr}`</div>}\n      <StyledList>\n        {filteredContacts.map(({ id, name, number }) => {\n          return (\n            <StyledItem key={id}>\n              <span className=\"name\">{name}</span>\n              <span className=\"number\">{number}</span>\n              <StyledBtn\n                type=\"button\"\n                onClick={() => {\n                  dispatch(deleteContact(id));\n                }}\n              >\n                Delete\n              </StyledBtn>\n            </StyledItem>\n          );\n        })}\n      </StyledList>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledLabel = styled.label`\n  margin-bottom: 10px;\n  margin-right: 10px;\n  font-weight: 500;\n  font-size: 24px;\n\n  + input {\n    padding: 5px 10px;\n    width: 100%;\n    max-width: 300px;\n    text-align: center;\n    font-size: 24px;\n    border-radius: 5px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { StyledLabel } from './Filter.styled';\nimport { selectContactsFilterTerm } from 'redux/selectors';\nimport { setFilterTerm } from 'redux/contactsSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(selectContactsFilterTerm);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <StyledLabel htmlFor=\"filter\">Find contacts by name</StyledLabel>\n      <input\n        name=\"filter\"\n        type=\"text\"\n        id=\"filter\"\n        value={filter}\n        onChange={e => dispatch(setFilterTerm(e.currentTarget.value))}\n      />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { StyledContainer } from 'components/App.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <StyledContainer>\n      <h1>Phonebook</h1>\n      <ContactForm></ContactForm>\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </StyledContainer>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["StyledContainer","styled","_templateObject","_taggedTemplateLiteral","StyledForm","Form","StyledField","Field","_templateObject2","StyledBtn","_templateObject3","ContactForm","contacts","useSelector","selectContacts","dispatch","useDispatch","_jsx","Formik","initialValues","name","number","onSubmit","values","_ref","resetForm","newContact","find","contact","alert","concat","addContact","children","_jsxs","_Fragment","htmlFor","type","id","autoComplete","required","StyledList","StyledItem","ContactList","isLoading","selectContactsIsLoading","erorr","selectContactsError","filter","selectContactsFilterTerm","useEffect","fetchContacts","filteredContacts","toLowerCase","includes","map","className","onClick","deleteContact","StyledLabel","Filter","value","onChange","e","setFilterTerm","currentTarget"],"sourceRoot":""}